{
  "address": "0x06f265Ca3bE3d4785DDE667301A59bd349eC70a4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CollateralDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CollateralWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensBorrowed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensRepaid",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "outputTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "checkCollateralAllowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "checkOutputTokenAllowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "collateralBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "debt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "outputToken",
      "outputs": [
        {
          "internalType": "contract IERC20ForSPL",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "outputTokenSet",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "outputTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_outputToken",
          "type": "address"
        }
      ],
      "name": "setOutputToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc7529cbf5bb32306ebf68bf0d9625abcd6a7daaaee13d52fcb94dd5d92691e8c",
  "receipt": {
    "to": null,
    "from": "0xc5b2abf4bF6c894A54F227EAe8E18c9FA3970EAf",
    "contractAddress": "0x06f265Ca3bE3d4785DDE667301A59bd349eC70a4",
    "transactionIndex": 0,
    "gasUsed": "35966213",
    "logsBloom": "0x
    "blockHash": "0xbb277701234480a2c5986734125297a151d298a01b844429bc025e96ca483689",
    "transactionHash": "0xc7529cbf5bb32306ebf68bf0d9625abcd6a7daaaee13d52fcb94dd5d92691e8c",
    "logs": [],
    "blockNumber": 385483204,
    "cumulativeGasUsed": "35966213",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x512E48836Cd42F3eB6f50CEd9ffD81E0a7F15103"
  ],
  "numDeployments": 3,
  "solcInputHash": "caae4e1e0a6c9510a787d79de96be10c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBorrowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensRepaid\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"outputTokenAmount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"checkCollateralAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"checkOutputTokenAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"debt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"outputToken\",\"outputs\":[{\"internalType\":\"contract IERC20ForSPL\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"outputTokenSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"outputTokenAmount\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_outputToken\",\"type\":\"address\"}],\"name\":\"setOutputToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleAbra.sol\":\"SimpleAbra\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SimpleAbra.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IERC20 {\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n    function transfer(address to, uint256 value) external returns (bool);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n}\\n\\ninterface IERC20ForSPL {\\n    function mint(address to, uint256 amount) external;\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n    function allowance(address owner, address spender) external view returns (uint256);\\n}\\n\\ncontract SimpleAbra {\\n    IERC20 public collateralToken;        // e.g., USDC\\n    IERC20ForSPL public outputToken;      // 4ap token with mint/burn capability\\n    address public owner;\\n    bool public outputTokenSet;\\n\\n    mapping(address => uint256) public collateralBalance;\\n    mapping(address => uint256) public debt;\\n\\n    uint256 public collateralFactor = 50; // 50% LTV (Loan to Value)\\n\\n    event CollateralDeposited(address indexed user, uint256 amount);\\n    event CollateralWithdrawn(address indexed user, uint256 amount);\\n    event TokensBorrowed(address indexed user, uint256 amount);\\n    event TokensRepaid(address indexed user, uint256 amount);\\n\\n    constructor(address _collateralToken) {\\n        collateralToken = IERC20(_collateralToken);\\n        owner = msg.sender;\\n    }\\n\\n    function setOutputToken(address _outputToken) external {\\n        require(msg.sender == owner, \\\"Only owner\\\");\\n        require(!outputTokenSet, \\\"Output token already set\\\");\\n        outputToken = IERC20ForSPL(_outputToken);\\n        outputTokenSet = true;\\n    }\\n\\n    // Deposit USDC to the contract\\n    function depositCollateral(uint256 amount) external {\\n        require(amount > 0, \\\"amount = 0\\\");\\n        // Note: User must approve this contract to spend their collateral tokens first\\n        collateralToken.transferFrom(msg.sender, address(this), amount);\\n        collateralBalance[msg.sender] += amount;\\n        emit CollateralDeposited(msg.sender, amount);\\n    }\\n\\n    // Borrow 4ap (mint new tokens)\\n    function borrow(uint256 outputTokenAmount) external {\\n        require(outputTokenSet, \\\"Output token not set\\\");\\n        uint256 maxBorrow = (collateralBalance[msg.sender] * collateralFactor) / 100;\\n        require(outputTokenAmount <= maxBorrow, \\\"Exceeds max borrow limit\\\");\\n\\n        debt[msg.sender] += outputTokenAmount;\\n        outputToken.mint(msg.sender, outputTokenAmount);\\n        emit TokensBorrowed(msg.sender, outputTokenAmount);\\n    }\\n\\n    // Repay 4ap (collect tokens in contract)\\n    function repay(uint256 outputTokenAmount) external {\\n        require(outputTokenAmount > 0 && debt[msg.sender] >= outputTokenAmount, \\\"Invalid repayment\\\");\\n        // Note: User must approve this contract to spend their output tokens first\\n        outputToken.transferFrom(msg.sender, address(this), outputTokenAmount);\\n        debt[msg.sender] -= outputTokenAmount;\\n        emit TokensRepaid(msg.sender, outputTokenAmount);\\n    }\\n\\n    // Withdraw USDC from the contract\\n    function withdrawCollateral(uint256 amount) external {\\n        require(collateralBalance[msg.sender] >= amount, \\\"Not enough collateral\\\");\\n\\n        // Recalculate max borrow after withdrawal\\n        uint256 remainingCollateral = collateralBalance[msg.sender] - amount;\\n        uint256 maxDebt = (remainingCollateral * collateralFactor) / 100;\\n        require(debt[msg.sender] <= maxDebt, \\\"Too much debt\\\");\\n\\n        collateralBalance[msg.sender] -= amount;\\n        collateralToken.transfer(msg.sender, amount);\\n        emit CollateralWithdrawn(msg.sender, amount);\\n    }\\n\\n    function checkCollateralAllowance(address user) external view returns (uint256) {\\n        return collateralToken.allowance(user, address(this));\\n    }\\n\\n    function checkOutputTokenAllowance(address user) external view returns (uint256) {\\n        return outputToken.allowance(user, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x530ef32b526cdcb935e437b32992f9693b3cbac308bcd6af6385a4a617d11b20\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052603260055534801561001557600080fd5b50604051610b34380380610b3483398101604081905261003491610062565b600080546001600160a01b039092166001600160a01b03199283161790556002805490911633179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b610a93806100a16000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a11c264c1161008c578063bad4a01f11610066578063bad4a01f14610205578063c1d8d1d914610218578063c5ebeaec1461022b578063df011c411461023e57600080fd5b8063a11c264c146101ae578063a1bf2840146101d2578063b2016bd4146101f257600080fd5b80636112fe2e116100c85780636112fe2e1461013d5780636b5b2c31146101505780638da5cb5b146101635780639b6c56ec1461018e57600080fd5b806327b35a4e146100ef578063371fd8e6146101155780633746a1001461012a575b600080fd5b6101026100fd366004610964565b610247565b6040519081526020015b60405180910390f35b610128610123366004610994565b6102c3565b005b610102610138366004610964565b610400565b61012861014b366004610994565b610439565b61012861015e366004610964565b6105ef565b600254610176906001600160a01b031681565b6040516001600160a01b03909116815260200161010c565b61010261019c366004610964565b60046020526000908152604090205481565b6002546101c290600160a01b900460ff1681565b604051901515815260200161010c565b6101026101e0366004610964565b60036020526000908152604090205481565b600054610176906001600160a01b031681565b610128610213366004610994565b6106c6565b600154610176906001600160a01b031681565b610128610239366004610994565b6107d5565b61010260055481565b60008054604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e906044015b602060405180830381865afa158015610299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bd91906109ad565b92915050565b6000811180156102e25750336000908152600460205260409020548111155b6103275760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c995c185e5b595b9d607a1b60448201526064015b60405180910390fd5b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561037e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a291906109c6565b5033600090815260046020526040812080548392906103c29084906109fe565b909155505060405181815233907f433058c7d6ec341522f1f95d6a8ad4106f1cad8fd1bf4faf6052448ed62e9b43906020015b60405180910390a250565b600154604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092169063dd62ed3e9060440161027c565b336000908152600360205260409020548111156104905760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da0818dbdb1b185d195c985b605a1b604482015260640161031e565b336000908152600360205260408120546104ab9083906109fe565b905060006064600554836104bf9190610a11565b6104c99190610a28565b3360009081526004602052604090205490915081101561051b5760405162461bcd60e51b815260206004820152600d60248201526c151bdbc81b5d58da081919589d609a1b604482015260640161031e565b336000908152600360205260408120805485929061053a9084906109fe565b909155505060005460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b491906109c6565b5060405183815233907fc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d9060200160405180910390a2505050565b6002546001600160a01b031633146106365760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015260640161031e565b600254600160a01b900460ff16156106905760405162461bcd60e51b815260206004820152601860248201527f4f757470757420746f6b656e20616c7265616479207365740000000000000000604482015260640161031e565b600180546001600160a01b039092166001600160a01b03199092169190911790556002805460ff60a01b1916600160a01b179055565b600081116107035760405162461bcd60e51b815260206004820152600a6024820152690616d6f756e74203d20360b41b604482015260640161031e565b6000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561075a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077e91906109c6565b50336000908152600360205260408120805483929061079e908490610a4a565b909155505060405181815233907fd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142906020016103f5565b600254600160a01b900460ff166108255760405162461bcd60e51b815260206004820152601460248201527313dd5d1c1d5d081d1bdad95b881b9bdd081cd95d60621b604482015260640161031e565b6005543360009081526003602052604081205490916064916108479190610a11565b6108519190610a28565b9050808211156108a35760405162461bcd60e51b815260206004820152601860248201527f45786365656473206d617820626f72726f77206c696d69740000000000000000604482015260640161031e565b33600090815260046020526040812080548492906108c2908490610a4a565b90915550506001546040516340c10f1960e01b8152336004820152602481018490526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561091357600080fd5b505af1158015610927573d6000803e3d6000fd5b50506040518481523392507f8412c29da21aa433ef5a58b426e1a0a97689471947dd559e72c5a8953bd5e9f5915060200160405180910390a25050565b60006020828403121561097657600080fd5b81356001600160a01b038116811461098d57600080fd5b9392505050565b6000602082840312156109a657600080fd5b5035919050565b6000602082840312156109bf57600080fd5b5051919050565b6000602082840312156109d857600080fd5b8151801515811461098d57600080fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156102bd576102bd6109e8565b80820281158282048414176102bd576102bd6109e8565b600082610a4557634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156102bd576102bd6109e856fea26469706673582212207c87d33c0300b81de1cce5407cd3cb0b3989602a7b1d925b963fc26d98508d0064736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a11c264c1161008c578063bad4a01f11610066578063bad4a01f14610205578063c1d8d1d914610218578063c5ebeaec1461022b578063df011c411461023e57600080fd5b8063a11c264c146101ae578063a1bf2840146101d2578063b2016bd4146101f257600080fd5b80636112fe2e116100c85780636112fe2e1461013d5780636b5b2c31146101505780638da5cb5b146101635780639b6c56ec1461018e57600080fd5b806327b35a4e146100ef578063371fd8e6146101155780633746a1001461012a575b600080fd5b6101026100fd366004610964565b610247565b6040519081526020015b60405180910390f35b610128610123366004610994565b6102c3565b005b610102610138366004610964565b610400565b61012861014b366004610994565b610439565b61012861015e366004610964565b6105ef565b600254610176906001600160a01b031681565b6040516001600160a01b03909116815260200161010c565b61010261019c366004610964565b60046020526000908152604090205481565b6002546101c290600160a01b900460ff1681565b604051901515815260200161010c565b6101026101e0366004610964565b60036020526000908152604090205481565b600054610176906001600160a01b031681565b610128610213366004610994565b6106c6565b600154610176906001600160a01b031681565b610128610239366004610994565b6107d5565b61010260055481565b60008054604051636eb1769f60e11b81526001600160a01b0384811660048301523060248301529091169063dd62ed3e906044015b602060405180830381865afa158015610299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bd91906109ad565b92915050565b6000811180156102e25750336000908152600460205260409020548111155b6103275760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c995c185e5b595b9d607a1b60448201526064015b60405180910390fd5b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561037e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a291906109c6565b5033600090815260046020526040812080548392906103c29084906109fe565b909155505060405181815233907f433058c7d6ec341522f1f95d6a8ad4106f1cad8fd1bf4faf6052448ed62e9b43906020015b60405180910390a250565b600154604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092169063dd62ed3e9060440161027c565b336000908152600360205260409020548111156104905760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da0818dbdb1b185d195c985b605a1b604482015260640161031e565b336000908152600360205260408120546104ab9083906109fe565b905060006064600554836104bf9190610a11565b6104c99190610a28565b3360009081526004602052604090205490915081101561051b5760405162461bcd60e51b815260206004820152600d60248201526c151bdbc81b5d58da081919589d609a1b604482015260640161031e565b336000908152600360205260408120805485929061053a9084906109fe565b909155505060005460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b491906109c6565b5060405183815233907fc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d9060200160405180910390a2505050565b6002546001600160a01b031633146106365760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015260640161031e565b600254600160a01b900460ff16156106905760405162461bcd60e51b815260206004820152601860248201527f4f757470757420746f6b656e20616c7265616479207365740000000000000000604482015260640161031e565b600180546001600160a01b039092166001600160a01b03199092169190911790556002805460ff60a01b1916600160a01b179055565b600081116107035760405162461bcd60e51b815260206004820152600a6024820152690616d6f756e74203d20360b41b604482015260640161031e565b6000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561075a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077e91906109c6565b50336000908152600360205260408120805483929061079e908490610a4a565b909155505060405181815233907fd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142906020016103f5565b600254600160a01b900460ff166108255760405162461bcd60e51b815260206004820152601460248201527313dd5d1c1d5d081d1bdad95b881b9bdd081cd95d60621b604482015260640161031e565b6005543360009081526003602052604081205490916064916108479190610a11565b6108519190610a28565b9050808211156108a35760405162461bcd60e51b815260206004820152601860248201527f45786365656473206d617820626f72726f77206c696d69740000000000000000604482015260640161031e565b33600090815260046020526040812080548492906108c2908490610a4a565b90915550506001546040516340c10f1960e01b8152336004820152602481018490526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561091357600080fd5b505af1158015610927573d6000803e3d6000fd5b50506040518481523392507f8412c29da21aa433ef5a58b426e1a0a97689471947dd559e72c5a8953bd5e9f5915060200160405180910390a25050565b60006020828403121561097657600080fd5b81356001600160a01b038116811461098d57600080fd5b9392505050565b6000602082840312156109a657600080fd5b5035919050565b6000602082840312156109bf57600080fd5b5051919050565b6000602082840312156109d857600080fd5b8151801515811461098d57600080fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156102bd576102bd6109e8565b80820281158282048414176102bd576102bd6109e8565b600082610a4557634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156102bd576102bd6109e856fea26469706673582212207c87d33c0300b81de1cce5407cd3cb0b3989602a7b1d925b963fc26d98508d0064736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/SimpleAbra.sol:SimpleAbra",
        "label": "collateralToken",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)31"
      },
      {
        "astId": 65,
        "contract": "contracts/SimpleAbra.sol:SimpleAbra",
        "label": "outputToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20ForSPL)59"
      },
      {
        "astId": 67,
        "contract": "contracts/SimpleAbra.sol:SimpleAbra",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 69,
        "contract": "contracts/SimpleAbra.sol:SimpleAbra",
        "label": "outputTokenSet",
        "offset": 20,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 73,
        "contract": "contracts/SimpleAbra.sol:SimpleAbra",
        "label": "collateralBalance",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 77,
        "contract": "contracts/SimpleAbra.sol:SimpleAbra",
        "label": "debt",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 80,
        "contract": "contracts/SimpleAbra.sol:SimpleAbra",
        "label": "collateralFactor",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)31": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20ForSPL)59": {
        "encoding": "inplace",
        "label": "contract IERC20ForSPL",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}